spring:
  profiles.active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/todak?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: ENC(jJLsRyj/8sknjlO3NPTBqo319DHLNqsQ)
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 20
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
  servlet.multipart:
    max-request-size: 20MB
    max-file-size: 20MB
  security.oauth2.client:
    registration:
      google:
        clientId: 734906187307-st5qhrqrtlf029ojhnsg7tl72amup155.apps.googleusercontent.com
        clientSecret: bgHQO2OH9kuN6HM0DB-__lbo
      scope:
        - email
        - profile
      facebook:
        clientId: 658402078887336
        clientSecret: e634ee93c182e3cb14444529eaa9bd1e
        scope:
          - email
          - public_profile
      naver:
        clientId: e69r3Ndd4DO2dpJXZ3Sw
        clientSecret: S94LYZbhQ_
        clientAuthenticationMethod: post
        authorizationGrantType: authorization_code
        redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        scope:
          - nickname
          - email
          - profile_image
        clientName: Naver
      kakao:
        clientId: 4275b0ec16b1cd36d43e90ec82da6984
        clientSecret: wOvS6KoqI7K3NzRXPPwXHutb26YTythx
        clientAuthenticationMethod: post
        authorizationGrantType: authorization_code
        redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
        scope:
          - profile
        clientName: Kakao
    provider:
      naver:
        authorizationUri: https://nid.naver.com/oauth2.0/authorize
        tokenUri: https://nid.naver.com/oauth2.0/token
        userInfoUri: https://openapi.naver.com/v1/nid/me
        userNameAttribute: response
      kakao:
        authorizationUri: https://kauth.kakao.com/oauth/authorize
        tokenUri: https://kauth.kakao.com/oauth/token
        userInfoUri: https://kapi.kakao.com/v2/user/me
        userNameAttribute: id

server.port: 8443

jwt.secret: 'jwt-token-secret-jwt-token-secret-jwt-token-secret'

mybatis:
  mapper-locations: classpath:mappers/*.xml
  configuration:
    boolean-to-yn: true
    cacheEnabled: true
    lazyLoadingEnabled: true
    aggressiveLazyLoading: true
    useGeneratedKeys: true
    defaultExecutorType: SIMPLE
    mapUnderscoreToCamelCase: true
  type-aliases-package: com.td.todak.api.entity
  type-handlers-package: com.td.todak.config.typehandler

cors:
  allowed-origins: 'http://localhost:3000'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

jasypt:
  encryptor:
    password: default_password
    bean: jasyptStringEncryptor

logging:
  config: classpath:log4j2.xml
  level:
    root: debug
    jdbc: off
    jdbc.sqltiming: debug

app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth/redirect